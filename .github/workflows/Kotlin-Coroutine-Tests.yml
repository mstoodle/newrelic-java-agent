name: Kotlin Coroutine Instrumentation Tests

on:
  push:
    branches:
      - tcrone/kotlin-coroutine-spike
jobs:
  tests:
    name: Java ${{ matrix.java-version }} Instrumentation Tests
    timeout-minutes: 60

    runs-on: ubuntu-latest
    strategy:
      # max-parallel: 1 ## used to force sequential vs. concurrent
      fail-fast: false
      matrix:
        java-version: [ 8, 11, 17, 18 ]
    steps:
      - uses: actions/checkout@v2

      # Install 8
      - name: Set up Java 8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8

      # Save new JDK variable
      - name: Save JAVA_HOME as JDK8 for later usage
        run: |
          echo "Current JAVA_HOME = ${JAVA_HOME}"
          echo "ORG_GRADLE_PROJECT_jdk8=$JAVA_HOME" >> $GITHUB_ENV

      # Install 11
      - name: Set up Java 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 11

      # Save new JDK variable
      - name: Save JAVA_HOME as JDK11 for later usage
        run: |
          echo "Current JAVA_HOME = ${JAVA_HOME}"
          echo "ORG_GRADLE_PROJECT_jdk11=$JAVA_HOME" >> $GITHUB_ENV

      # Install 17
      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      # Save new JDK variable
      - name: Save JAVA_HOME as JDK17 for later usage
        run: |
          echo "Current JAVA_HOME = ${JAVA_HOME}"
          echo "ORG_GRADLE_PROJECT_jdk17=$JAVA_HOME" >> $GITHUB_ENV

      # Install 18
      - name: Set up Java 18
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 18

      # Save new JDK variable
      - name: Save JAVA_HOME as JDK18 for later usage
        run: |
          echo "Current JAVA_HOME = ${JAVA_HOME}"
          echo "ORG_GRADLE_PROJECT_jdk18=$JAVA_HOME" >> $GITHUB_ENV

      # Needed for toolchains and GHA.
      - name: setup gradle options
        run: echo "GRADLE_OPTIONS=-Porg.gradle.java.installations.auto-detect=false -Porg.gradle.java.installations.fromEnv=ORG_GRADLE_PROJECT_jdk8,ORG_GRADLE_PROJECT_jdk11" >> $GITHUB_ENV

      # Check ENV variables
      - name: Check environmental variables
        run: printenv | sort -f

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: set gradle.properties
        run: |
          sed -i -e "s|jdk8=8|jdk8=${ORG_GRADLE_PROJECT_jdk8}|
          s|jdk11=11|jdk11=${ORG_GRADLE_PROJECT_jdk11}|
          s|jdk17=17|jdk17=${ORG_GRADLE_PROJECT_jdk17}|
          s|jdk18=18|jdk18=${ORG_GRADLE_PROJECT_jdk18}|" gradle.properties.gha
          cat gradle.properties.gha
          rm gradle.properties
          mv gradle.properties.gha gradle.properties

      # Run the build without Gradle Enterprise
      - name: Run instrumentation tests for Java ${{ matrix.java-version }}
        env:
          JAVA_HOME: ${{ env.ORG_GRADLE_PROJECT_jdk8 }}
        run: |
          ./gradlew --console=plain instrumentation:kotlin-coroutines-1.2:test -Ptest${{ matrix.java-version }} --continue

      # Capture HTML build result in artifacts
      - name: Capture build reports
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: instrumentation-tests-results-java-${{ matrix.java-version }}
          path: |
            instrumentation/**/build/reports/tests/*
